" vim: set fdm=marker foldmarker=\"\ â€£,Plug\ \':

source $HOME/.vimrc.d/defaults.vim


call plug#begin("~/.nvim-cxx/bundle")

Plug 'ivan-cukic/vim-colors-penultimate'

source $HOME/.vimrc.d/plugins-set-common.vim
source $HOME/.vimrc.d/plugins-set-motion.vim

Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'jansenm/vim-cmake'
Plug 'jansenm/vim-cmake'
nnoremap <Leader>c    <Esc>:Make<CR>|  "" Compile the program
inoremap <S-Leader>c  <Esc>:Make<CR>
nnoremap <S-Leader>c  <Esc>:Make<CR>
nnoremap <Leader>C    <Esc>:Copen<CR>|  "" Compile the program
inoremap <S-Leader>C  <Esc>:Copen<CR>
nnoremap <S-Leader>C  <Esc>:Copen<CR>
Plug 'tpope/vim-dispatch'
Plug 'peterhoeg/vim-qml'
vmap <C-K> :py3file /usr/share/clang/clang-format-7/clang-format.py<CR>|        "" Clang format
nmap <C-K> :py3file <Esc>/usr/share/clang/clang-format-7/clang-format.py<CR>

function! ClangCheckImpl(cmd)
    if &autowrite | wall | endif
    echo "Running " . a:cmd . " ..."
    let l:output = system(a:cmd)
    cexpr l:output
    cwindow
    let w:quickfix_title = a:cmd
    if v:shell_error != 0
        cc
    endif
    let g:clang_check_last_cmd = a:cmd
endfunction

function! ClangCheck()
    let l:filename = expand('%')
    if l:filename =~ '\.\(cpp\|cxx\|cc\|c\)$'
        call ClangCheckImpl("clang-check " . l:filename)
    elseif exists("g:clang_check_last_cmd")
        call ClangCheckImpl(g:clang_check_last_cmd)
    else
        echo "Can't detect file's compilation arguments and no previous clang-check invocation!"
    endif
endfunction

nmap <silent> <F10> :call ClangCheck()<CR><CR>|      "" Run clang check
autocmd FileType cpp nnoremap <silent><buffer> K <Esc>:silent! call system("~/bin/assistant " . expand('<cword>'))<CR>


call plug#end()



call camelcasemotion#CreateMotionMappings(',')
colors penultimate


if executable('clangd')
    augroup lsp_clangd
        autocmd!
        autocmd User lsp_setup call lsp#register_server({
                    \ 'name': 'clangd',
                    \ 'cmd': {server_info->['clangd']},
                    \ 'whitelist': ['c', 'cpp', 'objc', 'objcpp'],
                    \ })
        autocmd FileType c setlocal omnifunc=lsp#complete
        autocmd FileType cpp setlocal omnifunc=lsp#complete
        autocmd FileType objc setlocal omnifunc=lsp#complete
        autocmd FileType objcpp setlocal omnifunc=lsp#complete
    augroup end
endif

